"""
Start command handler for Cars Bot.

Handles /start command and welcome message.
"""

import logging

from aiogram import F, Router
from aiogram.filters import Command, CommandStart
from aiogram.types import Message

from cars_bot.bot.keyboards.reply_keyboards import get_main_keyboard
from cars_bot.database.models.user import User

logger = logging.getLogger(__name__)

router = Router(name="start")


@router.message(CommandStart())
async def cmd_start(message: Message, user: User | None = None) -> None:
    """
    Handle /start command.
    
    Sends welcome message and shows main menu.
    
    Args:
        message: Incoming message
        user: User model from context (added by UserRegistrationMiddleware)
    """
    # Fallback if user is not provided by middleware
    if not user:
        user_name = message.from_user.first_name if message.from_user else "–¥—Ä—É–≥"
    else:
        user_name = user.first_name
    
    welcome_text = (
        f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}!\n\n"
        f"üöó <b>Cars Bot</b> ‚Äî –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –≤ –ø–æ–∏—Å–∫–µ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π.\n\n"
        f"üì¢ –í—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø—É–±–ª–∏–∫—É—é—Ç—Å—è –≤ –Ω–∞—à–µ–º –∫–∞–Ω–∞–ª–µ –±–µ—Å–ø–ª–∞—Ç–Ω–æ.\n"
        f"üîì –ö–æ–Ω—Ç–∞–∫—Ç—ã –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ –ø–æ–¥–ø–∏—Å–∫–µ.\n\n"
        f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ üëá"
    )
    
    keyboard = get_main_keyboard()
    
    await message.answer(
        text=welcome_text,
        reply_markup=keyboard,
        parse_mode="HTML"
    )
    
    if user:
        logger.info(f"Sent welcome message to user {user.telegram_user_id}")
    else:
        logger.warning(f"Sent welcome message without user context to {message.from_user.id if message.from_user else 'unknown'}")


@router.message(F.text == "üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
async def back_to_main_menu(message: Message, user: User | None = None) -> None:
    """
    Handle 'Back to Main Menu' button.
    
    Args:
        message: Incoming message
        user: User model from context
    """
    menu_text = (
        "üì± <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª:"
    )
    
    keyboard = get_main_keyboard()
    
    await message.answer(
        text=menu_text,
        reply_markup=keyboard,
        parse_mode="HTML"
    )

