# =============================================================================
# TELEGRAM BOT CONFIGURATION (Bot API)
# =============================================================================
# Get bot token from @BotFather on Telegram
BOT_TOKEN=1234567890:ABCdefGHIjklMNOpqrsTUVwxyz

# Telegram channel ID where posts will be published (format: -100XXXXXXXXX)
NEWS_CHANNEL_ID=-1001234567890

# Admin user IDs (comma-separated list of Telegram user IDs)
ADMIN_USER_IDS=123456789,987654321

# =============================================================================
# TELEGRAM USER SESSION CONFIGURATION (for monitoring channels)
# =============================================================================
# Get these credentials from https://my.telegram.org/apps
# IMPORTANT: Keep these credentials secure!
TELEGRAM_API_ID=12345678
TELEGRAM_API_HASH=0123456789abcdef0123456789abcdef

# Session file path (will be created after first authorization)
# CRITICAL: This file must be backed up and excluded from git!
TELEGRAM_SESSION_FILE=./sessions/monitor_session.session

# Phone number for Telegram user session (international format: +7XXXXXXXXXX)
TELEGRAM_PHONE_NUMBER=+79001234567

# =============================================================================
# DATABASE CONFIGURATION (PostgreSQL)
# =============================================================================
DB_HOST=postgres
DB_PORT=5432
DB_NAME=cars_bot
DB_USER=cars_bot_user
DB_PASSWORD=change_this_secure_password

# Database URL (constructed from above, or override)
DATABASE_URL=postgresql+asyncpg://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=

# Redis URL for Celery
REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}

# =============================================================================
# GOOGLE SHEETS CONFIGURATION
# =============================================================================
# Google Service Account JSON credentials file path
# Download from: https://console.cloud.google.com/iam-admin/serviceaccounts
# Example filename: southern-camera-476019-f1-416755b5d8b7.json
GOOGLE_SERVICE_ACCOUNT_FILE=./secrets/google_service_account.json

# Alternatively, provide JSON credentials as a string (for Docker secrets)
# GOOGLE_SERVICE_ACCOUNT_JSON='{"type":"service_account","project_id":"..."}'

# Google Spreadsheet ID (from spreadsheet URL)
# Example URL: https://docs.google.com/spreadsheets/d/SPREADSHEET_ID/edit
# Your spreadsheet: https://docs.google.com/spreadsheets/d/11CK7WsMDHEju55Wr-ECtKstu_WReDYWlLCNHp8jBiQY/edit
GOOGLE_SHEETS_ID=11CK7WsMDHEju55Wr-ECtKstu_WReDYWlLCNHp8jBiQY

# Cache TTL for Google Sheets data (in seconds)
SHEETS_CACHE_TTL=60

# Rate limiting for Google Sheets API (requests per window)
SHEETS_API_RATE_LIMIT=100
SHEETS_API_RATE_WINDOW=100

# =============================================================================
# AI / OPENAI CONFIGURATION
# =============================================================================
# OpenAI API key (get from https://platform.openai.com/api-keys)
OPENAI_API_KEY=sk-proj-abcdefghijklmnopqrstuvwxyz1234567890

# Model to use for AI processing
OPENAI_MODEL=gpt-4o-mini

# Alternative: YandexGPT configuration (if using instead of OpenAI)
# YANDEX_API_KEY=your_yandex_api_key
# YANDEX_FOLDER_ID=your_folder_id

# Temperature for AI generation (0.0 - 2.0, lower = more deterministic)
AI_TEMPERATURE=0.3

# Maximum tokens for AI responses
AI_MAX_TOKENS=2000

# =============================================================================
# CELERY CONFIGURATION
# =============================================================================
# Celery broker and result backend URLs
CELERY_BROKER_URL=${REDIS_URL}
CELERY_RESULT_BACKEND=${REDIS_URL}

# Celery worker concurrency (number of worker processes)
CELERY_WORKER_CONCURRENCY=4

# =============================================================================
# MONITORING & FILTERS CONFIGURATION
# =============================================================================
# Minimum confidence score for AI classification (0.0 - 1.0)
MIN_CONFIDENCE_SCORE=0.75

# Minimum price filter (in rubles, optional)
MIN_PRICE=

# Maximum price filter (in rubles, optional)
MAX_PRICE=

# Global keywords for filtering (comma-separated, optional)
GLOBAL_KEYWORDS=продам,авто,машина,автомобиль

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log format: json or text
LOG_FORMAT=json

# Log file path (optional, logs to stdout if not specified)
LOG_FILE=

# =============================================================================
# PAYMENT CONFIGURATION (for future implementation)
# =============================================================================
# YooKassa credentials (for payments)
# YOOKASSA_SHOP_ID=your_shop_id
# YOOKASSA_SECRET_KEY=your_secret_key

# Subscription prices (in rubles)
SUBSCRIPTION_PRICE_MONTHLY=299
SUBSCRIPTION_PRICE_YEARLY=2990

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================
# Environment: development, production, testing
ENVIRONMENT=development

# Debug mode (set to False in production!)
DEBUG=True

# Timezone
TIMEZONE=Europe/Moscow

# =============================================================================
# SECURITY SETTINGS
# =============================================================================
# Secret key for encrypting sensitive data (generate random string)
SECRET_KEY=change_this_to_random_secret_key_at_least_32_chars_long

# Allowed hosts (comma-separated)
ALLOWED_HOSTS=localhost,127.0.0.1

# =============================================================================
# RATE LIMITING
# =============================================================================
# Google Sheets API rate limit (requests per 100 seconds)
SHEETS_API_RATE_LIMIT=100

# Telegram API rate limit (messages per second)
TELEGRAM_API_RATE_LIMIT=30

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================
# Backup directory path
BACKUP_DIR=./backups

# Backup retention days
BACKUP_RETENTION_DAYS=30
