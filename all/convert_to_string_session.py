#!/usr/bin/env python3
"""
–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å SQLite —Å–µ—Å—Å–∏—é –≤ StringSession.
–≠—Ç–æ —Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É "database is locked" –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ Monitor.
"""
import asyncio
from telethon import TelegramClient
from telethon.sessions import StringSession

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ .env –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
API_ID = 23897156
API_HASH = "3a04baa30eeb6faf62c62bb356579fe4"
SESSION_FILE = "/root/cars-bot/sessions/monitor_session.session"

async def convert_session():
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª–æ–≤—É—é —Å–µ—Å—Å–∏—é –≤ StringSession."""
    
    print("=" * 60)
    print("–ö–û–ù–í–ï–†–¢–ê–¶–ò–Ø –°–ï–°–°–ò–ò –í STRING SESSION")
    print("=" * 60)
    print()
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è —Å —Ñ–∞–π–ª–æ–≤–æ–π —Å–µ—Å—Å–∏–µ–π
    print(f"üìÇ –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª–æ–≤—É—é —Å–µ—Å—Å–∏—é: {SESSION_FILE}")
    client = TelegramClient(SESSION_FILE, API_ID, API_HASH)
    
    try:
        await client.connect()
        
        if not await client.is_user_authorized():
            print("‚ùå –°–µ—Å—Å–∏—è –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∞!")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        me = await client.get_me()
        print(f"‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω –∫–∞–∫: {me.first_name} {me.last_name or ''} (@{me.username or 'N/A'})")
        print()
        
        # –ü–æ–ª—É—á–∞–µ–º StringSession
        string_session = StringSession.save(client.session)
        
        print("üîê STRING SESSION (–¥–æ–±–∞–≤—å—Ç–µ –≤ .env):")
        print("-" * 60)
        print(f"TELEGRAM__SESSION_STRING={string_session}")
        print("-" * 60)
        print()
        print("‚úÖ –ì–æ—Ç–æ–≤–æ! –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å—Ç—Ä–æ–∫—É –≤—ã—à–µ –≤ —Ñ–∞–π–ª .env –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
        print()
        print("üìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –î–æ–±–∞–≤—å—Ç–µ TELEGRAM__SESSION_STRING –≤ .env")
        print("2. –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–¥ Monitor –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è StringSession")
        print("3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ Monitor")
        
    finally:
        await client.disconnect()


if __name__ == '__main__':
    asyncio.run(convert_session())

