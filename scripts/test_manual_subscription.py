#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä—É—á–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ —á–µ—Ä–µ–∑ Google Sheets.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python scripts/test_manual_subscription.py
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—é
sys.path.insert(0, str(Path(__file__).parent.parent / "src"))


async def test_read_subscribers():
    """–¢–µ—Å—Ç —á—Ç–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∏–∑ Google Sheets."""
    from cars_bot.config import get_settings
    from cars_bot.sheets.manager import GoogleSheetsManager

    print("=" * 80)
    print("–¢–µ—Å—Ç 1: –ß—Ç–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –∏–∑ Google Sheets")
    print("=" * 80)

    settings = get_settings()
    sheets_manager = GoogleSheetsManager(
        credentials_path=settings.google.credentials_file,
        spreadsheet_id=settings.google.spreadsheet_id,
    )

    try:
        # –ß–∏—Ç–∞–µ–º –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ (–±–µ–∑ –∫—ç—à–∞)
        subscribers = sheets_manager.get_subscribers(use_cache=False)
        
        print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–Ω–æ {len(subscribers)} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤")
        
        if subscribers:
            print("\n–ü–µ—Ä–≤—ã–µ 5 –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤:")
            for i, sub in enumerate(subscribers[:5], 1):
                print(f"\n{i}. User ID: {sub.user_id}")
                print(f"   Username: {sub.username or '(–Ω–µ —É–∫–∞–∑–∞–Ω)'}")
                print(f"   –ò–º—è: {sub.name}")
                print(f"   –¢–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏: {sub.subscription_type.value}")
                print(f"   –ê–∫—Ç–∏–≤–Ω–∞: {sub.is_active}")
                print(f"   –î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞: {sub.start_date or '(–Ω–µ —É–∫–∞–∑–∞–Ω–∞)'}")
                print(f"   –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: {sub.end_date or '(–Ω–µ —É–∫–∞–∑–∞–Ω–∞)'}")
        else:
            print("\n‚ö†Ô∏è  –ü–æ–¥–ø–∏—Å—á–∏–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü–µ")
        
        return True
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False


async def test_sync_from_sheets():
    """–¢–µ—Å—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–æ–∫ –∏–∑ Google Sheets –≤ –ë–î."""
    from cars_bot.tasks.sheets_tasks import sync_subscriptions_from_sheets_task

    print("\n" + "=" * 80)
    print("–¢–µ—Å—Ç 2: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–æ–∫ –∏–∑ Google Sheets –≤ –ë–î")
    print("=" * 80)

    try:
        print("\nüîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...")
        result = sync_subscriptions_from_sheets_task()
        
        print(f"\n‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print(f"   –û–±–Ω–æ–≤–ª–µ–Ω–æ: {result.get('updated', 0)}")
        print(f"   –°–æ–∑–¥–∞–Ω–æ: {result.get('created', 0)}")
        print(f"   –ü—Ä–æ–ø—É—â–µ–Ω–æ: {result.get('skipped', 0)}")
        print(f"   –í—Å–µ–≥–æ: {result.get('total', 0)}")
        print(f"   –í—Ä–µ–º—è: {result.get('sync_time', 0):.2f}s")
        
        return True
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        return False


async def test_apply_subscription():
    """–¢–µ—Å—Ç –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–æ–¥–ø–∏—Å–∫–∏ –∏–∑ Google Sheets."""
    from cars_bot.config import get_settings
    from cars_bot.database.enums import SubscriptionType
    from cars_bot.database.session import get_db_manager
    from cars_bot.sheets.manager import GoogleSheetsManager
    from cars_bot.subscriptions.manager import SubscriptionManager

    print("\n" + "=" * 80)
    print("–¢–µ—Å—Ç 3: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–æ–¥–ø–∏—Å–∫–∏ –∏–∑ Google Sheets")
    print("=" * 80)

    settings = get_settings()
    sheets_manager = GoogleSheetsManager(
        credentials_path=settings.google.credentials_file,
        spreadsheet_id=settings.google.spreadsheet_id,
    )

    subscription_manager = SubscriptionManager(sheets_manager=sheets_manager)
    db_manager = get_db_manager()

    try:
        # –ß–∏—Ç–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞
        subscribers = sheets_manager.get_subscribers(use_cache=False)
        
        if not subscribers:
            print("\n‚ö†Ô∏è  –ù–µ—Ç –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return False
        
        test_subscriber = subscribers[0]
        print(f"\n–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_subscriber.user_id} ({test_subscriber.name})")
        
        async with db_manager.session() as session:
            print(f"\nüîÑ –ü—Ä–∏–º–µ–Ω—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –∏–∑ Google Sheets...")
            
            await subscription_manager.apply_subscription_from_sheets(
                session=session,
                telegram_user_id=test_subscriber.user_id,
                subscription_type=test_subscriber.subscription_type,
                is_active=test_subscriber.is_active,
                start_date=test_subscriber.start_date,
                end_date=test_subscriber.end_date,
            )
            
            await session.commit()
            
            print(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∞!")
            print(f"   –¢–∏–ø: {test_subscriber.subscription_type.value}")
            print(f"   –ê–∫—Ç–∏–≤–Ω–∞: {test_subscriber.is_active}")
        
        return True
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
        import traceback
        traceback.print_exc()
        return False


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("\n" + "=" * 80)
    print("–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–£–ß–ù–û–ì–û –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–û–î–ü–ò–°–ö–ê–ú–ò")
    print("=" * 80)
    
    results = []
    
    # –¢–µ—Å—Ç 1: –ß—Ç–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤
    results.append(("–ß—Ç–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤", await test_read_subscribers()))
    
    # –¢–µ—Å—Ç 2: –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    results.append(("–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∏–∑ Sheets", await test_sync_from_sheets()))
    
    # –¢–µ—Å—Ç 3: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏
    results.append(("–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∏", await test_apply_subscription()))
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "=" * 80)
    print("–†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 80)
    
    passed = 0
    failed = 0
    
    for name, result in results:
        status = "‚úÖ PASSED" if result else "‚ùå FAILED"
        print(f"{status} - {name}")
        if result:
            passed += 1
        else:
            failed += 1
    
    print("\n" + "-" * 80)
    print(f"–í—Å–µ–≥–æ —Ç–µ—Å—Ç–æ–≤: {len(results)}")
    print(f"–£—Å–ø–µ—à–Ω–æ: {passed}")
    print(f"–ü—Ä–æ–≤–∞–ª–µ–Ω–æ: {failed}")
    print("=" * 80)
    
    return failed == 0


if __name__ == "__main__":
    success = asyncio.run(main())
    sys.exit(0 if success else 1)

