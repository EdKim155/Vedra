#!/usr/bin/env python3
"""Quick check of monitor status and channel configuration."""

import asyncio
import sys
from pathlib import Path
from dotenv import load_dotenv

# Load environment variables
env_path = Path(__file__).parent / ".env"
load_dotenv(env_path)

# Add src to path
sys.path.insert(0, str(Path(__file__).parent / "src"))

from cars_bot.config import get_settings
from cars_bot.database.session import init_database, get_db_manager
from cars_bot.database.models.channel import Channel
from sqlalchemy import select


async def main():
    """Check monitor configuration."""
    print("=" * 60)
    print("üîç –ü–†–û–í–ï–†–ö–ê –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò –ú–û–ù–ò–¢–û–†–ê")
    print("=" * 60)
    print()
    
    # Initialize database
    settings = get_settings()
    init_database(str(settings.database.url))
    
    db_manager = get_db_manager()
    
    async with db_manager.session() as session:
        # Get active channels
        result = await session.execute(
            select(Channel).where(Channel.is_active == True)
        )
        channels = result.scalars().all()
        
        print(f"üìã –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –≤ –ë–î: {len(channels)}")
        print()
        
        if not channels:
            print("‚ùå –ù–ï–¢ –ê–ö–¢–ò–í–ù–´–• –ö–ê–ù–ê–õ–û–í!")
            print("   –î–æ–±–∞–≤—å—Ç–µ –∫–∞–Ω–∞–ª—ã –≤ Google Sheets –∏ –ø–æ–¥–æ–∂–¥–∏—Ç–µ –º–∏–Ω—É—Ç—É")
            return
        
        for i, ch in enumerate(channels, 1):
            print(f"{'=' * 60}")
            print(f"–ö–∞–Ω–∞–ª {i}: {ch.channel_title}")
            print(f"{'=' * 60}")
            print(f"   Username: @{ch.channel_username}")
            print(f"   Channel ID: {ch.channel_id}")
            print(f"   –ê–∫—Ç–∏–≤–µ–Ω: {'‚úÖ –î–∞' if ch.is_active else '‚ùå –ù–µ—Ç'}")
            
            # Keywords
            if ch.keywords and len(ch.keywords) > 0:
                print(f"   –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: {', '.join(ch.keywords)}")
                print(f"   ‚ö†Ô∏è  –¢–û–õ–¨–ö–û –ø–æ—Å—Ç—ã —Å —ç—Ç–∏–º–∏ —Å–ª–æ–≤–∞–º–∏ –±—É–¥—É—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!")
            else:
                print(f"   –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞: –í–°–ï –ü–û–°–¢–´ (—Ñ–∏–ª—å—Ç—Ä –æ—Ç–∫–ª—é—á–µ–Ω)")
            
            print(f"   –í—Å–µ–≥–æ –ø–æ—Å—Ç–æ–≤: {ch.total_posts}")
            print(f"   –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {ch.last_checked or '–Ω–∏–∫–æ–≥–¥–∞'}")
            print()
        
        print("=" * 60)
        print("üìù –í–ê–ñ–ù–û:")
        print("=" * 60)
        print("1. –ú–æ–Ω–∏—Ç–æ—Ä –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ù–û–í–´–ï –ø–æ—Å—Ç—ã (–ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞)")
        print("2. –°—Ç–∞—Ä—ã–µ –ø–æ—Å—Ç—ã –ù–ï –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
        print("3. –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω—ã –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ - –ø–æ—Å—Ç –î–û–õ–ñ–ï–ù –∏—Ö —Å–æ–¥–µ—Ä–∂–∞—Ç—å")
        print("4. –ü–æ—Å—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤ —Ç–µ–∫—Å—Ç–∞")
        print()
        print("üîÑ –î–õ–Ø –¢–ï–°–¢–ê:")
        print("   –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø–æ—Å—Ç –≤ –∫–∞–Ω–∞–ª–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å")
        print("   –ü–æ–¥–æ–∂–¥–∏—Ç–µ 10-30 —Å–µ–∫—É–Ω–¥")
        print()


if __name__ == "__main__":
    asyncio.run(main())

